When would you want to use a remote repository rather than keeping all your work local?

When you are working on a project with other people, or you work from different machines or just want a backup copy of your repo online.

--------------

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because there maybe changes in the remote that I do not want in my local repository.

--------------

Describe the differences between forks, clones, and branches. When would you use one instead of another?

A branch is a different set of commits that share ancestors commits in a repository. You use a branch to develop a feaure, for example. A clone is a copy of a repository, you use a clone for example to contribute a project your are developing with other people. A fork is a clone on Github of another Github repository. It is used when you use someone´s open source code and you also plan to contribute with your own development, bug fixes, etc.

--------------

What is the benefit of having a copy of the last known state of the remote stored locally?

You can continue working offline with the repository.

--------------

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without GitHub but only with git the main problem is not having the option of pull request. Collaborating by working in different branches would be the same. However, merging to other people´s branches would require additional communication outsid of git.
Working without git is easier if people is working in completely different parts of a project, and the interaction only happens at a few points in time. However, as soon as you need to use parts of the code other people is still working on, and it will be done several times, git eases the collaboration and keeping track of all the changes.

--------------

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

You want to make changes in a separate branch when you are contributing to the project of someone else, so before modifying master you want other people to take a look at what you changed. Working this way is a bit more complicated, but it is safer since people can try your code before any changes are pushed into master. Also, this way it is easier to keep up-date with changes in master in the original repository, and merging your changes when you are ready.
Making changes in master is easier.

--------------